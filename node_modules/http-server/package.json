{
  "_from": "http-server@0.11.1",
  "_id": "http-server@0.11.1",
  "_inBundle": false,
  "_integrity": "sha512-6JeGDGoujJLmhjiRGlt8yK8Z9Kl0vnl/dQoQZlc4oeqaUoAKQg94NILLfrY3oWzSyFaQCVNTcKE5PZ3cH8VP9w==",
  "_location": "/http-server",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "http-server",
    "fetchSpec": "0.11.1",
    "name": "http-server",
    "raw": "http-server@0.11.1",
    "rawSpec": "0.11.1",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/http-server/-/http-server-0.11.1.tgz",
  "_shasum": "2302a56a6ffef7f9abea0147d838a5e9b6b6a79b",
  "_shrinkwrap": null,
  "_spec": "http-server@0.11.1",
  "_where": "/Users/jinzhenguo/Documents/developer/sliders",
  "bin": {
    "hs": "./bin/http-server",
    "http-server": "./bin/http-server"
  },
  "bugs": {
    "url": "https://github.com/nodeapps/http-server/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "email": "charlie.robbins@gmail.com",
      "name": "Charlie Robbins"
    },
    {
      "email": "marak.squires@gmail.com",
      "name": "Marak Squires"
    },
    {
      "email": "charlie@charlieistheman.com",
      "name": "Charlie McConnell"
    },
    {
      "email": "josh.holbrook@gmail.com",
      "name": "Joshua Holbrook"
    },
    {
      "email": "maciej.malecki@notimplemented.org",
      "name": "Maciej Ma≈Çecki"
    },
    {
      "email": "mzbphoto@gmail.com",
      "name": "Matthew Bergman"
    },
    {
      "email": "dunbarb2@gmail.com",
      "name": "brad dunbar"
    },
    {
      "name": "Dominic Tarr"
    },
    {
      "email": "travis.person@gmail.com",
      "name": "Travis Person"
    },
    {
      "email": "master@bdyne.net",
      "name": "Jinkwon Lee"
    },
    {
      "email": "byoung@bigbluehat.com",
      "name": "BigBlueHat"
    }
  ],
  "dependencies": {
    "colors": "1.0.3",
    "corser": "~2.0.0",
    "ecstatic": "^3.0.0",
    "http-proxy": "^1.8.1",
    "opener": "~1.4.0",
    "optimist": "0.6.x",
    "portfinder": "^1.0.13",
    "union": "~0.4.3"
  },
  "deprecated": false,
  "description": "A simple zero-configuration command-line http server",
  "devDependencies": {
    "common-style": "^3.0.0",
    "request": "2.49.x",
    "vows": "0.7.x"
  },
  "files": [
    "lib",
    "bin"
  ],
  "homepage": "https://github.com/indexzero/http-server#readme",
  "keywords": [
    "cli",
    "command"
  ],
  "license": "MIT",
  "main": "./lib/http-server",
  "name": "http-server",
  "optionalDependencies": {},
  "preferGlobal": "true",
  "readme": "[![build status](https://img.shields.io/travis/indexzero/http-server.svg?style=flat-square)](https://travis-ci.org/indexzero/http-server)\n[![dependencies status](https://img.shields.io/david/indexzero/http-server.svg?style=flat-square)](https://david-dm.org/indexzero/http-server)\n[![npm](https://img.shields.io/npm/v/http-server.svg?style=flat-square)](https://www.npmjs.com/package/http-server)\n[![license](https://img.shields.io/github/license/indexzero/http-server.svg?style=flat-square)](https://github.com/indexzero/http-server)\n\n# http-server: a command-line http server\n\n`http-server` is a simple, zero-configuration command-line http server.  It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\n![](https://github.com/nodeapps/http-server/raw/master/screenshots/public.png)\n\n# Installing globally:\n\nInstallation via `npm`:\n\n     npm install http-server -g\n\nThis will install `http-server` globally so that it may be run from the command line.\n\n## Usage:\n\n     http-server [path] [options]\n\n`[path]` defaults to `./public` if the folder exists, and `./` otherwise.\n\n*Now you can visit http://localhost:8080 to view your server*\n\n## Available Options:\n\n`-p` Port to use (defaults to 8080)\n\n`-a` Address to use (defaults to 0.0.0.0)\n\n`-d` Show directory listings (defaults to 'True')\n\n`-i` Display autoIndex (defaults to 'True')\n\n`-g` or `--gzip` When enabled (defaults to 'False') it will serve `./public/some-file.js.gz` in place of `./public/some-file.js` when a gzipped version of the file exists and the request accepts gzip encoding.\n\n`-e` or `--ext` Default file extension if none supplied (defaults to 'html')\n\n`-s` or `--silent` Suppress log messages from output\n\n`--cors` Enable CORS via the `Access-Control-Allow-Origin` header\n\n`-o` Open browser window after starting the server\n\n`-c` Set cache time (in seconds) for cache-control max-age header, e.g. -c10 for 10 seconds (defaults to '3600'). To disable caching, use -c-1.\n\n`-U` or `--utc` Use UTC time format in log messages.\n\n`-P` or `--proxy` Proxies all requests which can't be resolved locally to the given url. e.g.: -P http://someurl.com\n\n`-S` or `--ssl` Enable https.\n\n`-C` or `--cert` Path to ssl cert file (default: cert.pem).\n\n`-K` or `--key` Path to ssl key file (default: key.pem).\n\n`-r` or `--robots` Provide a /robots.txt (whose content defaults to 'User-agent: *\\nDisallow: /')\n\n`-h` or `--help` Print this list and exit.\n\n# Development\n\nCheckout this repository locally, then:\n\n```sh\n$ npm i\n$ node bin/http-server\n```\n\n*Now you can visit http://localhost:8080 to view your server*\n\nYou should see the turtle image in the screenshot above hosted at that URL. See\nthe `./public` folder for demo content.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/indexzero/http-server.git"
  },
  "scripts": {
    "pretest": "common bin/http-server lib/ test",
    "start": "node ./bin/http-server",
    "test": "vows --spec --isolate"
  },
  "version": "0.11.1"
}
